name: OpenWrt TP-Link TL-WR703N

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  schedule:
    - cron: "9 0/12 * * 2-6"

jobs:
  printJob:
    name: Print event
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
  check:
    outputs:
      latest: ${{ steps.latest.outputs.is_latest }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Set Environment Variable
        run: |
          OPENWRT_VERSION=`./latest-imagebuilder-version.sh ath79 tiny .`
          echo "OPENWRT_VERSION=${OPENWRT_VERSION}" >> $GITHUB_ENV
      - id: latest
        name: Check Published Version
        run: |
          PUBLISHED_VERSION=`curl 'https://downloads.hackinggate.com' | grep 'tl-wr703n' | grep -E -o ${OPENWRT_VERSION} | tail -1`
          echo "${OPENWRT_VERSION} is latest"
          if [[ "$OPENWRT_VERSION" == "$PUBLISHED_VERSION" ]]; then
            echo "${OPENWRT_VERSION} is published for tl-wr703n"
            echo "::set-output name=is_latest::true"
          else
            echo "${OPENWRT_VERSION} is NOT published for tl-wr703n"
          fi
  build:
    needs: check
    if: ${{ needs.check.outputs.latest != 'true' || github.event_name != 'schedule' }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        major_version: [v, v22.03, v21.02]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Set Environment Variable
        run: |
          OPENWRT_VERSION=`./latest-imagebuilder-version.sh ath79 tiny ${{ matrix.major_version }}`
          echo "OPENWRT_VERSION=${OPENWRT_VERSION}" >> $GITHUB_ENV
      - name: Prerequisites
        run: |
          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
          file wget
      - name: Build TL-WR703N with imagebuilder
        run: |
          OPENWRT_VERSION=${{ env.OPENWRT_VERSION }}
          ./tl-wr703n-openwrt-imagebuilder-build.sh
      - name: Checkout gh-pages
        run : |
          git config --add remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
          git fetch origin gh-pages
          git checkout gh-pages
      - name: Override Files
        run: |
          OPENWRT_VERSION=${{ env.OPENWRT_VERSION }}
          IMAGE_PREFIX=`cat openwrt-imagebuilder-${OPENWRT_VERSION}-a*7*-tiny.Linux-x86_64/bin/targets/*/tiny/profiles.json | jq '.["profiles"]' | jq 'map(.)' | jq -r '.[0]["image_prefix"]'`
          rm -rf ${IMAGE_PREFIX}
          mv openwrt-imagebuilder-${OPENWRT_VERSION}-a*7*-tiny.Linux-x86_64/bin/targets/*/tiny ${IMAGE_PREFIX}
          rm -rf openwrt-imagebuilder-*
      - name: Generate gh-pages
        run: |
          git checkout - -- generate-page.sh
          ./generate-page.sh
          rm generate-page.sh
      - name: Tree
        run: | 
          sudo apt install tree
          tree
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          branch: gh-pages
          folder: .
          clean: true
          dry-run: ${{ github.event_name == 'pull_request' }}
