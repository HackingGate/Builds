name: OpenWrt Netgear R7800 (imagebuilder)

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  schedule:
    - cron: "0 0/12 * * 2-6"

jobs:
  printJob:    
    name: Print event
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
  check:
    outputs:
      latest: ${{ steps.latest.outputs.is_latest }}
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Variable
        run: |
          OPENWRT_TAG=`git ls-remote https://github.com/openwrt/openwrt | grep -E -o 'v[0-9]+\.[0-9]+\.[0-9]+' | tail -1`
          OPENWRT_VERSION=`echo ${OPENWRT_TAG} | grep -E -o '[0-9]+\.[0-9]+\.[0-9]+'`
          echo "OPENWRT_TAG=${OPENWRT_TAG}" >> $GITHUB_ENV
          echo "OPENWRT_VERSION=${OPENWRT_VERSION}" >> $GITHUB_ENV
      - id: latest
        name: Check Published Version
        run: |
          PUBLISHED_VERSION=`curl 'https://downloads.hackinggate.com' | grep 'netgear-r7800' | grep -E -o '[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -1 || echo 0.0.0`
          if [[ "$OPENWRT_VERSION" == "$PUBLISHED_VERSION" ]]; then
            echo "::set-output name=is_latest::true"
          fi
  build:
    needs: check
    if: needs.check.outputs.latest != 'true' || github.event_name != 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Variable
        run: |
          OPENWRT_TAG=`git ls-remote https://github.com/openwrt/openwrt | grep -E -o 'v[0-9]+\.[0-9]+\.[0-9]+' | tail -1`
          OPENWRT_VERSION=`echo ${OPENWRT_TAG} | grep -E -o '[0-9]+\.[0-9]+\.[0-9]+'`
          echo "OPENWRT_TAG=${OPENWRT_TAG}" >> $GITHUB_ENV
          echo "OPENWRT_VERSION=${OPENWRT_VERSION}" >> $GITHUB_ENV
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - name: Prerequisites
        run: |
          sudo apt update
          sudo apt install -y build-essential libncurses5-dev libncursesw5-dev \
          zlib1g-dev gawk git gettext libssl-dev xsltproc wget unzip python \
          jq tree
      - name: Build R7800 with imagebuilder
        run: |
          OPENWRT_VERSION=${{ env.OPENWRT_VERSION }}
          ./r7800-openwrt-imagebuilder-build.sh
      - name: Checkout gh-pages
        run : |
          git config --add remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
          git fetch origin gh-pages
          git checkout gh-pages
      - name: Override Files
        run: |
          OPENWRT_VERSION=${{ env.OPENWRT_VERSION }}
          rm -rf openwrt-${OPENWRT_VERSION}-ipq806x-generic-netgear-r7800
          mv openwrt-imagebuilder-${OPENWRT_VERSION}-ipq806x-generic.Linux-x86_64/bin/targets/ipq806x/generic openwrt-${OPENWRT_VERSION}-ipq806x-generic-netgear-r7800
          rm -rf openwrt-imagebuilder-*
          rm openwrt-${OPENWRT_VERSION}-ipq806x-generic-netgear-r7800/sha256sums
      - name: Generate gh-pages
        run: ./generate-page.sh
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: .
          clean: true
          dry-run: github.event_name == 'pull_request'
